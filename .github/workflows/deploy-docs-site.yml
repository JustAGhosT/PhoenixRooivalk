name: Deploy Docusaurus (docs-site)

on:
  push:
    branches: [main]
    paths:
      - "apps/docs/**"
      - ".github/workflows/deploy-docs-site.yml"
  pull_request:
    paths:
      - "apps/docs/**"
      - ".github/workflows/deploy-docs-site.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    if: github.event_name != 'pull_request'
    env:
      ENV_NAME: production
      BRANCH: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      pull-requests: write
    defaults:
      run:
        working-directory: apps/docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack and setup pnpm
        run: |
          corepack enable
          corepack use pnpm@9.15.9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format check
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm run build

      - name: Check build directory exists
        id: check_build
        run: |
          if [ -d "apps/docs/build" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-site-build
          path: apps/docs/build

      - name: Deploy to Netlify
        if: steps.check_build.outputs.exists == 'true'
        uses: nwtgck/actions-netlify@v3
        with:
          publish-dir: "apps/docs/build"
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Automated deploy from GitHub Actions"
          enable-commit-comment: false
          enable-commit-status: true
          alias: "prod"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DOCS_SITE_ID }}

  preview-deploy:
    if: github.event_name == 'pull_request'
    env:
      ENV_NAME: preview
      BRANCH: ${{ github.head_ref }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      pull-requests: write
    defaults:
      run:
        working-directory: apps/docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack and setup pnpm
        run: |
          corepack enable
          corepack use pnpm@9.15.9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format check
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm run build

      - name: Check build directory exists
        id: check_build_preview
        run: |
          if [ -d "apps/docs/build" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Preview to Netlify
        if: steps.check_build_preview.outputs.exists == 'true'
        uses: nwtgck/actions-netlify@v3
        with:
          publish-dir: "apps/docs/build"
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            "Deploy Preview from PR #${{ github.event.pull_request.number }}"
          enable-commit-comment: false
          enable-commit-status: false
          enable-pull-request-comment: false
          alias: ${{ github.head_ref }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DOCS_SITE_ID }}
