/* ThreatSimulator.module.css - Professional Military Theme */
.gameContainer {
  @apply relative w-full h-[600px] bg-gradient-to-br from-slate-900 via-slate-950 to-slate-900 rounded-xl border overflow-hidden shadow-2xl;
  border-color: rgba(var(--primary), 0.2);
}

.technicalGrid {
  @apply absolute inset-0 opacity-10 w-full h-full;
  background-image: linear-gradient(
      rgba(var(--primary), 0.08) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(var(--primary), 0.08) 1px, transparent 1px);
  background-size: 20px 20px;
}

.gameArea {
  @apply absolute inset-0 w-full h-full;
}

/* Dynamic threat positioning - will be applied via CSS custom properties */
.threatPosition {
  position: absolute;
  left: var(--threat-x, 0px);
  top: var(--threat-y, 0px);
}

/* Health bar width - will be applied via CSS custom properties */
.healthBarWidth {
  height: 100%;
  border-radius: inherit;
  transition: all 0.3s ease;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
  width: var(--health-width, 100%);
}

.centralShield {
  @apply absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-20 h-20 flex items-center justify-center shadow-2xl z-20;
}

.radarSweep {
  @apply absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 border-2 rounded-full opacity-15;
  border-color: rgba(249, 115, 22, 0.2);
}

.radarLine {
  @apply absolute top-1/2 left-1/2 w-full h-0.5 bg-gradient-to-r from-transparent to-transparent animate-spin origin-left;
  background: linear-gradient(
    to right,
    transparent,
    rgba(249, 115, 22, 1),
    transparent
  );
}

.threat {
  @apply absolute w-8 h-8 rounded-full flex items-center justify-center cursor-pointer transition-all duration-300 shadow-lg hover:scale-110 border;
  border-color: rgba(251, 191, 36, 0.15);
  transform: translate(var(--threat-x, 0px), var(--threat-y, 0px));
  will-change: transform;
}

.threat::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(251, 191, 36, 0.3) 0%,
    transparent 70%
  );
  transform: translate(-50%, -50%);
  animation: pulse 2s infinite;
}

.threat::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 200%;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(249, 115, 22, 0.1) 0%,
    transparent 70%
  );
  transform: translate(-50%, -50%);
  animation: pulse 3s infinite;
  animation-delay: 1s;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.3;
    transform: translate(-50%, -50%) scale(0.8);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.2);
  }
}

.threatDrone {
  @apply bg-red-700 shadow-lg shadow-red-700/40;
}

.threatSwarm {
  @apply shadow-lg;
  background-color: #f97316;
  box-shadow:
    0 10px 15px -3px rgba(249, 115, 22, 0.4),
    0 4px 6px -2px rgba(249, 115, 22, 0.4);
}

.threatStealth {
  @apply bg-slate-600 shadow-lg shadow-slate-600/40;
}

.healthBar {
  @apply absolute -bottom-1 left-0 right-0 h-1 rounded border;
  background-color: rgb(var(--tactical-gray-dark));
  border-color: rgba(var(--phoenix-amber), 0.2);
}

.healthFill {
  @apply h-full rounded transition-all shadow-sm;
  background: linear-gradient(
    to right,
    rgb(var(--phoenix-orange)),
    rgb(var(--phoenix-red))
  );
}

.statsOverlay {
  @apply absolute top-4 right-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  box-shadow:
    0 10px 15px -3px rgba(var(--phoenix-orange), 0.2),
    0 4px 6px -2px rgba(var(--phoenix-orange), 0.2);
}

.statsContent {
  @apply flex gap-4 px-3 py-2;
}

.statItem {
  @apply text-center;
}

.statValue {
  @apply text-lg font-mono font-bold;
  color: rgb(var(--phoenix-amber));
}

.statLabel {
  @apply text-xs font-mono;
  color: rgb(var(--tactical-gray));
}

.controlsOverlay {
  @apply absolute bottom-4 left-1/2 transform -translate-x-1/2 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  box-shadow:
    0 10px 15px -3px rgba(var(--phoenix-orange), 0.2),
    0 4px 6px -2px rgba(var(--phoenix-orange), 0.2);
}

.controlsContent {
  @apply flex gap-2 px-3 py-2;
}

.controlButton {
  @apply px-3 py-1.5 rounded text-xs font-mono transition-all duration-200 border font-semibold;
}

.controlButtonGray {
  color: rgb(var(--tactical-gray-light));
  background-color: rgb(var(--tactical-gray-dark));
  border-color: rgb(var(--tactical-gray));
}
.controlButtonGray:hover {
  background-color: rgb(var(--tactical-gray));
  border-color: rgb(var(--tactical-gray-light));
}

.controlButtonOrange {
  @apply text-white shadow-sm;
  background-color: rgb(var(--phoenix-orange));
  border-color: rgb(var(--phoenix-amber));
}
.controlButtonOrange:hover {
  background-color: rgb(var(--phoenix-amber));
  border-color: rgb(var(--phoenix-gold));
  box-shadow:
    0 10px 15px -3px rgba(249, 115, 22, 0.3),
    0 4px 6px -2px rgba(249, 115, 22, 0.3);
}

.controlButtonGreen {
  @apply text-white shadow-sm;
  background-color: #ea580c;
  border-color: #f97316;
}
.controlButtonGreen:hover {
  background-color: #f97316;
  border-color: #fb923c;
  box-shadow:
    0 10px 15px -3px rgba(249, 115, 22, 0.3),
    0 4px 6px -2px rgba(249, 115, 22, 0.3);
}

.weaponButton {
  @apply px-3 py-1.5 rounded text-xs font-mono transition-colors border;
}

.weaponButtonKinetic {
  @apply bg-red-700 border-red-600 text-red-100;
}

.weaponButtonElectronic {
  background-color: #c2410c;
  border-color: #ea580c;
  color: #fed7aa;
}

.weaponButtonLaser {
  background-color: #a16207;
  border-color: #ca8a04;
  color: #fef3c7;
}

.weaponButtonInactive {
  color: rgb(var(--tactical-gray-light));
  background-color: rgb(var(--tactical-gray-dark));
  border-color: rgb(var(--tactical-gray));
}
.weaponButtonInactive:hover {
  background-color: rgb(var(--tactical-gray));
}

/* Trail Effects */
.threatTrail {
  position: absolute;
  pointer-events: none;
  opacity: 0.6;
  z-index: 1;
}

.threatTrail::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(249, 115, 22, 0.4) 0%,
    transparent 70%
  );
  transform: translate(-50%, -50%);
  animation: trailFade 2s ease-out forwards;
}

@keyframes trailFade {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.3);
  }
}

/* Enhanced Stats Display */
.statsOverlay {
  @apply absolute top-4 right-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  box-shadow:
    0 10px 15px -3px rgba(var(--phoenix-orange), 0.2),
    0 4px 6px -2px rgba(var(--phoenix-orange), 0.2);
}

.comboIndicator {
  @apply absolute top-16 right-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(34, 197, 94, 0.9);
  border-color: rgba(34, 197, 94, 0.5);
  color: white;
  padding: 8px 12px;
  font-size: 14px;
  font-weight: bold;
  animation: comboPulse 0.5s ease-out;
}

@keyframes comboPulse {
  0% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.8;
  }
}

/* Frame Rate Control */
.frameRateControl {
  @apply absolute bottom-4 right-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  padding: 8px 12px;
}

.frameRateSlider {
  @apply w-20 h-1 bg-gray-700 rounded-lg appearance-none cursor-pointer;
}

.frameRateSlider::-webkit-slider-thumb {
  @apply appearance-none w-4 h-4 bg-orange-500 rounded-full cursor-pointer;
}

.frameRateSlider::-moz-range-thumb {
  @apply w-4 h-4 bg-orange-500 rounded-full cursor-pointer border-0;
}

/* Advanced Threat Types */
.threatKamikaze {
  @apply bg-red-800 shadow-lg shadow-red-800/60;
  animation: kamikazePulse 1s infinite;
}

@keyframes kamikazePulse {
  0%,
  100% {
    box-shadow: 0 0 10px rgba(239, 68, 68, 0.6);
  }
  50% {
    box-shadow: 0 0 20px rgba(239, 68, 68, 1);
  }
}

.threatDecoy {
  @apply bg-gray-500 shadow-lg shadow-gray-500/40;
  opacity: 0.7;
}

.threatShielded {
  @apply bg-blue-700 shadow-lg shadow-blue-700/60;
  position: relative;
}

.threatShielded::before {
  content: "";
  position: absolute;
  inset: -4px;
  border-radius: 50%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(59, 130, 246, 0.3),
    transparent
  );
  animation: shieldRotate 2s linear infinite;
  z-index: -1;
}

@keyframes shieldRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Weapon Selection UI */
.weaponSelection {
  @apply absolute top-4 left-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  padding: 8px;
}

.weaponButton {
  @apply px-3 py-2 rounded text-xs font-mono transition-all duration-200 border font-semibold mr-2 mb-2;
  min-width: 80px;
}

.weaponButtonActive {
  @apply text-white shadow-sm;
  background-color: rgb(var(--phoenix-orange));
  border-color: rgb(var(--phoenix-amber));
}

.weaponButtonActive:hover {
  background-color: rgb(var(--phoenix-amber));
  border-color: rgb(var(--phoenix-gold));
}

.weaponButtonInactive {
  color: rgb(var(--tactical-gray-light));
  background-color: rgb(var(--tactical-gray-dark));
  border-color: rgb(var(--tactical-gray));
}

.weaponButtonInactive:hover {
  background-color: rgb(var(--tactical-gray));
  border-color: rgb(var(--tactical-gray-light));
}

.weaponButtonDisabled {
  @apply opacity-50 cursor-not-allowed;
}

/* Ammo Display */
.ammoDisplay {
  @apply absolute top-4 left-1/2 transform -translate-x-1/2 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  padding: 8px 12px;
}

.ammoBar {
  @apply w-32 h-2 bg-gray-700 rounded-full overflow-hidden;
}

.ammoFill {
  @apply h-full transition-all duration-300;
  background: linear-gradient(
    to right,
    rgb(var(--phoenix-red)),
    rgb(var(--phoenix-orange))
  );
}

/* Power-Up Indicators */
.powerUpIndicator {
  @apply absolute top-16 left-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(34, 197, 94, 0.9);
  border-color: rgba(34, 197, 94, 0.5);
  color: white;
  padding: 6px 10px;
  font-size: 12px;
  font-weight: bold;
  animation: powerUpGlow 1s ease-in-out infinite alternate;
}

@keyframes powerUpGlow {
  0% {
    box-shadow: 0 0 5px rgba(34, 197, 94, 0.5);
  }
  100% {
    box-shadow: 0 0 15px rgba(34, 197, 94, 1);
  }
}

/* Achievement Notifications */
.achievementNotification {
  @apply absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 backdrop-blur-sm border rounded-lg shadow-2xl;
  background-color: rgba(251, 191, 36, 0.95);
  border-color: rgba(251, 191, 36, 0.8);
  color: var(--tactical-black);
  padding: 16px 24px;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  animation: achievementPop 2s ease-out forwards;
  z-index: 100;
}

@keyframes achievementPop {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1);
  }
  80% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.9);
  }
}

/* Mini-map */
.miniMap {
  @apply absolute bottom-4 left-4 backdrop-blur-sm border rounded-lg shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  width: 120px;
  height: 120px;
  overflow: hidden;
}

.miniMapThreat {
  @apply absolute w-1 h-1 rounded-full;
  background-color: rgb(var(--phoenix-red));
}

.miniMapCenter {
  @apply absolute w-2 h-2 rounded-full;
  background-color: rgb(var(--phoenix-amber));
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Trajectory Prediction */
.trajectoryLine {
  @apply absolute pointer-events-none;
  border: 1px dashed rgba(var(--phoenix-orange), 0.6);
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(var(--phoenix-orange), 0.3) 50%,
    transparent 100%
  );
  animation: trajectoryPulse 2s ease-in-out infinite;
}

@keyframes trajectoryPulse {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
}

/* Resource Management Display */
.resourceDisplay {
  @apply absolute top-4 right-4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  padding: 8px 12px;
}

.resourceBar {
  @apply w-24 h-2 bg-gray-700 rounded-full overflow-hidden mb-2;
}

.resourceBarEnergy {
  @apply h-full transition-all duration-300;
  background: linear-gradient(
    to right,
    rgb(var(--phoenix-orange)),
    rgb(var(--phoenix-amber))
  );
}

.resourceBarCooling {
  @apply h-full transition-all duration-300;
  background: linear-gradient(
    to right,
    rgb(var(--action-secondary)),
    rgb(var(--action-primary))
  );
}

.resourceLabel {
  @apply text-xs text-gray-300 font-mono;
}

/* Selection Box */
.selectionBox {
  @apply absolute pointer-events-none border border-blue-400 bg-blue-400/10;
  border-style: dashed;
}

/* Selected Threat Indicators */
.threatSelected {
  @apply ring-2 ring-blue-400 ring-opacity-75;
  animation: selectedPulse 1s ease-in-out infinite;
}

@keyframes selectedPulse {
  0%,
  100% {
    ring-opacity: 0.75;
  }
  50% {
    ring-opacity: 1;
  }
}

/* Priority Indicators */
.priorityIndicator {
  @apply absolute -top-1 -right-1 w-3 h-3 rounded-full border border-white;
}

.priorityHigh {
  @apply bg-red-500 animate-pulse;
}

.priorityMedium {
  @apply bg-yellow-500;
}

.priorityLow {
  @apply bg-green-500;
}

/* Enhanced Weapon Cooldown Indicators */
.weaponCooldownIndicator {
  @apply absolute inset-0 rounded-full border-2 border-red-500;
  background: conic-gradient(
    from 0deg,
    transparent 0deg,
    rgba(239, 68, 68, 0.3) 360deg
  );
  animation: cooldownSpin linear;
}

@keyframes cooldownSpin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Weather Effects */
.weatherRain {
  @apply absolute inset-0 pointer-events-none;
  background: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 2px,
    rgba(59, 130, 246, 0.1) 2px,
    rgba(59, 130, 246, 0.1) 4px
  );
  animation: rainFall 1s linear infinite;
}

@keyframes rainFall {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 20px;
  }
}

.weatherFog {
  @apply absolute inset-0 pointer-events-none;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    rgba(148, 163, 184, 0.1) 30%,
    rgba(148, 163, 184, 0.3) 70%,
    rgba(148, 163, 184, 0.5) 100%
  );
  animation: fogDrift 10s ease-in-out infinite;
}

@keyframes fogDrift {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.1);
  }
}

.nightVision {
  filter: hue-rotate(120deg) saturate(2) brightness(0.8) contrast(1.5);
}

/* Trajectory Prediction Lines */
.trajectoryPrediction {
  @apply absolute pointer-events-none;
  border: 1px dashed rgba(var(--phoenix-orange), 0.4);
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(var(--phoenix-orange), 0.2) 50%,
    transparent 100%
  );
  animation: trajectoryPulse 2s ease-in-out infinite;
}

/* Enhanced Threat Health Bars */
.threatHealthBar {
  @apply absolute -bottom-2 left-0 right-0 h-1 rounded border;
  background-color: rgba(var(--tactical-black), 0.8);
  border-color: rgba(var(--phoenix-orange), 0.3);
}

.threatHealthFill {
  @apply h-full rounded transition-all duration-300;
  background: linear-gradient(
    to right,
    rgb(var(--phoenix-red)),
    rgb(var(--phoenix-orange)),
    rgb(var(--phoenix-amber))
  );
}

/* Phoenix Rooivalk Mothership System */
.mothership {
  @apply absolute w-24 h-24 flex items-center justify-center z-30;
  background: radial-gradient(
    circle,
    rgba(var(--phoenix-orange), 0.8) 0%,
    rgba(var(--phoenix-red), 0.6) 70%,
    transparent 100%
  );
  border: 2px solid rgba(var(--phoenix-amber), 0.8);
  border-radius: 50%;
  box-shadow:
    0 0 20px rgba(var(--phoenix-orange), 0.6),
    inset 0 0 20px rgba(var(--phoenix-amber), 0.3);
  animation: mothershipPulse 3s ease-in-out infinite;
}

@keyframes mothershipPulse {
  0%,
  100% {
    transform: scale(1);
    box-shadow:
      0 0 20px rgba(var(--phoenix-orange), 0.6),
      inset 0 0 20px rgba(var(--phoenix-amber), 0.3);
  }
  50% {
    transform: scale(1.05);
    box-shadow:
      0 0 30px rgba(var(--phoenix-orange), 0.8),
      inset 0 0 30px rgba(var(--phoenix-amber), 0.5);
  }
}

.mothershipCore {
  @apply w-8 h-8 bg-gradient-to-br from-yellow-400 via-orange-500 to-red-600 rounded-full;
  box-shadow:
    0 0 15px rgba(251, 191, 36, 0.8),
    inset 0 0 10px rgba(255, 255, 255, 0.3);
  animation: coreRotate 4s linear infinite;
}

@keyframes coreRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Deployment Bays */
.deploymentBay {
  @apply absolute w-6 h-6 rounded-lg border-2 flex items-center justify-center cursor-pointer transition-all duration-300;
  background: rgba(var(--tactical-black), 0.8);
  border-color: rgba(var(--phoenix-orange), 0.5);
}

.deploymentBay:hover {
  border-color: rgba(var(--phoenix-amber), 0.8);
  background: rgba(var(--phoenix-orange), 0.1);
  transform: scale(1.1);
}

.deploymentBayReady {
  border-color: rgba(34, 197, 94, 0.8);
  background: rgba(34, 197, 94, 0.1);
}

.deploymentBayEmpty {
  border-color: rgba(239, 68, 68, 0.8);
  background: rgba(239, 68, 68, 0.1);
  opacity: 0.5;
}

.deploymentBayIndicator {
  @apply w-2 h-2 rounded-full;
  background: rgba(var(--phoenix-amber), 0.8);
  animation: bayPulse 2s ease-in-out infinite;
}

@keyframes bayPulse {
  0%,
  100% {
    opacity: 0.8;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

/* Deployed Drones */
.deployedDrone {
  @apply absolute w-4 h-4 rounded-full border transition-all duration-300 cursor-pointer;
  border-width: 1px;
}

.droneInterceptor {
  background: radial-gradient(
    circle,
    rgba(59, 130, 246, 0.8) 0%,
    rgba(37, 99, 235, 0.6) 100%
  );
  border-color: rgba(59, 130, 246, 0.8);
  box-shadow: 0 0 8px rgba(59, 130, 246, 0.6);
}

.droneJammer {
  background: radial-gradient(
    circle,
    rgba(168, 85, 247, 0.8) 0%,
    rgba(147, 51, 234, 0.6) 100%
  );
  border-color: rgba(168, 85, 247, 0.8);
  box-shadow: 0 0 8px rgba(168, 85, 247, 0.6);
}

.droneSurveillance {
  background: radial-gradient(
    circle,
    rgba(34, 197, 94, 0.8) 0%,
    rgba(22, 163, 74, 0.6) 100%
  );
  border-color: rgba(34, 197, 94, 0.8);
  box-shadow: 0 0 8px rgba(34, 197, 94, 0.6);
}

.droneShield {
  background: radial-gradient(
    circle,
    rgba(251, 191, 36, 0.8) 0%,
    rgba(245, 158, 11, 0.6) 100%
  );
  border-color: rgba(251, 191, 36, 0.8);
  box-shadow: 0 0 8px rgba(251, 191, 36, 0.6);
}

.droneSwarmCoordinator {
  background: radial-gradient(
    circle,
    rgba(239, 68, 68, 0.8) 0%,
    rgba(220, 38, 38, 0.6) 100%
  );
  border-color: rgba(239, 68, 68, 0.8);
  box-shadow: 0 0 8px rgba(239, 68, 68, 0.6);
}

.droneReturning {
  opacity: 0.7;
  animation: droneReturn 1s ease-in-out infinite alternate;
}

@keyframes droneReturn {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

/* Drone Selection */
.droneSelected {
  @apply ring-2 ring-blue-400 ring-opacity-75;
  animation: droneSelectedPulse 1s ease-in-out infinite;
}

@keyframes droneSelectedPulse {
  0%,
  100% {
    ring-opacity: 0.75;
  }
  50% {
    ring-opacity: 1;
  }
}

/* Mothership Resource Display */
.mothershipResources {
  @apply absolute top-4 left-1/4 backdrop-blur-sm border rounded-md shadow-lg;
  background-color: rgba(var(--tactical-black), 0.9);
  border-color: rgba(var(--phoenix-orange), 0.5);
  padding: 8px 12px;
}

.mothershipResourceBar {
  @apply w-32 h-2 bg-gray-700 rounded-full overflow-hidden mb-2;
}

.mothershipResourceFill {
  @apply h-full transition-all duration-300;
  background: linear-gradient(
    to right,
    rgb(var(--phoenix-orange)),
    rgb(var(--phoenix-amber))
  );
}

/* Drone Formation Lines */
.formationLine {
  @apply absolute pointer-events-none;
  border: 1px solid rgba(var(--phoenix-orange), 0.4);
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(var(--phoenix-orange), 0.2) 50%,
    transparent 100%
  );
  animation: formationPulse 2s ease-in-out infinite;
}

@keyframes formationPulse {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
}

/* Drone Mission Indicators */
.droneMissionIndicator {
  @apply absolute -top-2 -right-2 w-2 h-2 rounded-full text-xs;
}

.missionIntercept {
  background: #ef4444;
}

.missionJam {
  background: #a855f7;
}

.missionSurveil {
  background: #22c55e;
}

.missionShield {
  background: #fbbf24;
}

.missionCoordinate {
  background: #f97316;
}
